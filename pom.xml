<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2013 Institute for Molecular Imaging Instrumentation (I3M) 
	Licensed under the EUPL, Version 1.1 or - as soon they will be approved by 
	the European Commission - subsequent versions of the EUPL (the "Licence"); 
	You may not use this work except in compliance with the Licence. You may 
	obtain a copy of the Licence at: http://ec.europa.eu/idabc/eupl Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the Licence for the specific 
	language governing permissions and limitations under the Licence. This product 
	combines work with different licenses. See the "NOTICE" text file for details 
	on the various modules and licenses. The "NOTICE" text file is part of the 
	distribution. Any derivative works that you distribute must include a readable 
	copy of the "NOTICE" text file. --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.grycap.gpf4med</groupId>
	<artifactId>gpf4med</artifactId>
	<version>1.2.0</version>
	<packaging>pom</packaging>

	<name>gpf4med</name>
	<description>Graph processing framework for medical information (Gpf4Med) -- A framework for querying structured DICOM datasets</description>
	<url>https://github.com/grycap/gpf4med</url>

	<inceptionYear>2013</inceptionYear>

	<licenses>
		<license>
			<name>European Union Public Licence (EUPL)</name>
			<url>http://joinup.ec.europa.eu/software/page/eupl/licence-eupl</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>Grid and High-Performance Computing Group (GRyCAP)</name>
		<url>http://www.grycap.upv.es/</url>
	</organization>

	<scm>
		<url>https://github.com/grycap/gpf4med</url>
		<connection>scm:git:git://github.com/grycap/gpf4med.git</connection>
		<developerConnection>scm:git:git@github.com/grycap/gpf4med.git</developerConnection>
	</scm>

	<developers>
		<developer>
			<email>etorres@upv.es</email>
			<name>Erik Torres</name>
			<url>https://github.com/etorres</url>
			<id>etorres</id>
		</developer>
		<developer>
			<email>locamo@inf.upv.es</email>
			<name>Lorena Calabuig</name>
			<url>https://github.com/locamo</url>
			<id>locamo</id>
		</developer>
	</developers>

	<properties>
		<java.version>1.7</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Convenience properties to set Maven plugins versions -->
		<m2e.lifecycle-mapping.version>1.0.0</m2e.lifecycle-mapping.version>
		<maven-assembly-plugin.version>2.5.3</maven-assembly-plugin.version>
		<buildnumber-maven-plugin.version>1.3</buildnumber-maven-plugin.version>
		<exec-maven-plugin.version>1.3.2</exec-maven-plugin.version>
		<maven-compiler-plugin.version>3.2</maven-compiler-plugin.version>
		<maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
		<maven-failsafe-plugin.version>2.17</maven-failsafe-plugin.version>
		<maven-jar-plugin.version>2.5</maven-jar-plugin.version>
		<maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>

		<!-- Convenience properties to set library versions -->
		<gpf4med.version>1.2.0</gpf4med.version>
		<jclouds.version>1.8.1</jclouds.version>
		<jersey.version>2.14</jersey.version>
		<jspf.version>1.0.2</jspf.version>
		<junit.version>4.11</junit.version>
		<neo4j.version>2.1.3</neo4j.version>
		<akka.version>2.3.10</akka.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Apache Commons: Collection of open source reusable Java components -->

			<dependency> <!-- Command-line interface utilities -->
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.2</version>
			</dependency>

			<dependency>
				<groupId>commons-codec</groupId> <!-- Provides Base64/Base32 encoding/decoding -->
				<artifactId>commons-codec</artifactId>
				<version>1.10</version>
			</dependency>

			<dependency> <!-- Configuration handling -->
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>1.10</version>
			</dependency>

			<dependency> <!-- Extends the Java Collections Framework: needed by commons-configuration -->
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>

			<dependency> <!-- I/O routines -->
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>

			<dependency>
				<groupId>commons-discovery</groupId>
				<artifactId>commons-discovery</artifactId>
				<version>0.2</version>
			</dependency>

			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.1</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3.2</version>
			</dependency>
			
			
			<!-- Mock objects -->
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.3.1</version>
			</dependency>
			

			<!-- Apache HttpComponents: HTTP/1.1 compliant HTTP agents -->

			<dependency> <!-- Asynchronous HTTP client -->
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpasyncclient</artifactId>
				<version>4.0.2</version>
			</dependency>
			
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>3.1</version>
			</dependency>
		
			<dependency> <!-- Client fluent API -->
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>fluent-hc</artifactId>
				<version>4.4</version>
			</dependency>	

			<!-- Apache jclouds: an open source abstraction library for Cloud computing 
				(core components and selected providers & APIs are included here, if your 
				application requires a different provider you must include the dependency) -->

			<dependency> <!-- Core components to access jclouds services -->
				<groupId>org.apache.jclouds</groupId>
				<artifactId>jclouds-core</artifactId>
				<version>${jclouds.version}</version>
			</dependency>

			<dependency> <!-- jclouds sshj ssh client -->
				<groupId>org.apache.jclouds.driver</groupId>
				<artifactId>jclouds-sshj</artifactId>
				<version>${jclouds.version}</version>
			</dependency>

			<dependency> <!-- jclouds SLF4J Logging Module -->
				<groupId>org.apache.jclouds.driver</groupId>
				<artifactId>jclouds-slf4j</artifactId>
				<version>${jclouds.version}</version>
			</dependency>

			<dependency> <!-- jclouds enterprise configuration -->
				<groupId>org.apache.jclouds.driver</groupId>
				<artifactId>jclouds-enterprise</artifactId>
				<version>${jclouds.version}</version>
			</dependency>

			<dependency> <!-- EC2 implementation targeted to Amazon Web Services -->
				<groupId>org.apache.jclouds.provider</groupId>
				<artifactId>aws-ec2</artifactId>
				<version>${jclouds.version}</version>
			</dependency>

			<dependency> <!-- jclouds components to access an implementation of EC2 -->
				<groupId>org.apache.jclouds.api</groupId>
				<artifactId>ec2</artifactId>
				<version>${jclouds.version}</version>
			</dependency>

			<dependency> <!-- jclouds components to access an implementation of OpenStack Compute 
					(Nova) -->
				<groupId>org.apache.jclouds.api</groupId>
				<artifactId>openstack-nova</artifactId>
				<version>${jclouds.version}</version>
			</dependency>

			<dependency> <!-- jclouds bring your own node (BYON) provider -->
				<groupId>org.apache.jclouds.api</groupId>
				<artifactId>byon</artifactId>
				<version>${jclouds.version}</version>
			</dependency>

			<!-- Apache Tika: a toolkit for detecting and extracting metadata and 
				structured text content from various documents using existing parser libraries -->

			<dependency> <!-- core -->
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-core</artifactId>
				<version>1.6</version>
			</dependency>

			<!-- Guava: Google Core Libraries for Java -->

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>18.0</version>
			</dependency>

			<!-- JSR305 Annotations from Findbugs -->

			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>3.0.0</version>
			</dependency>

			<!-- Joda Time: Date and time library to replace JDK date handling -->

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.6</version>
			</dependency>

			<!-- The javax.inject API: declare this dependency (provided) to be able 
				to compile an application when no specific implementation of dependency injection 
				is required (provides annotations, for example, @Inject) -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>

			<!-- Java Servlet API: declare this dependency (provided) to be able to 
				compile an application when no specific implementation of Servlet is required -->

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
			</dependency>

			<!-- JAX-RS API: declare this dependency (provided) to be able to compile 
				an application when no specific implementation of JAX-RS is required -->

			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>2.0.1</version>
			</dependency>
			<dependency>
				<groupId>javax.xml</groupId>
				<artifactId>jaxrpc-api</artifactId>
				<version>1.1</version>
			</dependency>
			
			<!-- JSPF: Java Simple Plug-in Framework -->

			<dependency>
				<groupId>net.xeoh.jspf</groupId>
				<artifactId>jspf-core</artifactId>
				<version>1.0.2</version>
			</dependency>

			<!-- Neo4j graph database -->

			<dependency> <!-- A meta package containing the most used Neo4j Enterprise libraries -->
				<groupId>org.neo4j</groupId>
				<artifactId>neo4j-enterprise</artifactId>
				<version>${neo4j.version}</version>
			</dependency>

			<dependency> <!-- Graph algorithms for Neo4j -->
				<groupId>org.neo4j</groupId>
				<artifactId>neo4j-graph-algo</artifactId>
				<version>${neo4j.version}</version>
			</dependency>

			<dependency> <!-- A graph pattern matcher for Neo4j -->
				<groupId>org.neo4j</groupId>
				<artifactId>neo4j-graph-matching</artifactId>
				<version>${neo4j.version}</version>
			</dependency>

			<dependency> <!-- Utility component to generate Graphviz .dot notation from Neo4j graphs -->
				<groupId>org.neo4j</groupId>
				<artifactId>neo4j-graphviz</artifactId>
				<version>${neo4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.neo4j</groupId>
				<artifactId>server-api</artifactId>
				<version>${neo4j.version}</version>
			</dependency>

			<!-- Logback -->

			<dependency> <!-- classic module (uses the SLF4J API) -->
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.1.2</version>
			</dependency>

			<!-- SLF4J logging framework -->

			<dependency> <!-- java.util.logging (jul) bridge -->
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>1.7.10</version>
			</dependency>
			
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.7.12</version>
			</dependency>
			

			<!-- Mockito: a mock objects library for java -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.10.19</version>
			</dependency>
			
			<!-- Akka dependencies -->
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-actor_2.11</artifactId>
				<version>${akka.version}</version>
			</dependency>	
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-slf4j_2.11</artifactId>
				<version>${akka.version}</version>
			</dependency>

			<!-- TRENCADIS API -->
			<dependency>
				<groupId>org.grycap.trencadis</groupId>
				<artifactId>middleware</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>dicom-storage</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>eouid-generator</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>gate-keeper</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>key-server</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>ontology-server</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>storage-broker</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>backend</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>iis</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>indexer</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>keys-database</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>ontologies-database</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>database-connection-tool</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services</groupId>
				<artifactId>voms</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services.stubs</groupId>
				<artifactId>eouid-generator</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services.stubs</groupId>
				<artifactId>ontologies-server</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services.stubs</groupId>
				<artifactId>storage-broker</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis.infrastructure.services.stubs</groupId>
				<artifactId>storage-dicom</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>org.grycap.trencadis</groupId>
				<artifactId>common</artifactId>
				<version>1.0</version>
			</dependency>


			<!-- Extra dependencies added -->

			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>itextpdf</artifactId>
				<version>5.1.0</version>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.15</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun.jdmk</groupId>
						<artifactId>jmxtools</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jmx</groupId>
						<artifactId>jmxri</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>wsdl4j</groupId>
				<artifactId>wsdl4j</artifactId>
				<version>1.5.1</version>
			</dependency>

			<dependency>
				<groupId>wss4j</groupId>
				<artifactId>wss4j</artifactId>
				<version>1.5.0</version>
			</dependency>

			<dependency>
				<groupId>xalan</groupId>
				<artifactId>xalan</artifactId>
				<version>2.6.0</version>
			</dependency>

			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>2.7.1</version>
			</dependency>

			<dependency>
				<groupId>xml-security</groupId>
				<artifactId>xmlsec</artifactId>
				<version>1.2.1</version>
			</dependency>

			<dependency>
				<groupId>org.apache.axis</groupId>
				<artifactId>axis</artifactId>
				<version>1.4</version>
			</dependency>

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk14</artifactId>
				<version>1.45</version>
			</dependency>

			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>axis</artifactId>
				<version>1.6.0</version>
			</dependency>

			<!-- Cryptix -->
			<dependency>
				<groupId>cryptix</groupId>
				<artifactId>asn1</artifactId>
				<version>0.1.8</version>
			</dependency>
			<dependency>
				<groupId>cryptix</groupId>
				<artifactId>provider</artifactId>
				<version>1.0</version>
			</dependency>

			<!-- Globus -->
			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>ogsi</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>gram</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>rft</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>addressing</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>core-stubs</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>core</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>mds</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>provider</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>org.globus</groupId>
				<artifactId>jglobus</artifactId>
				<version>1.6.0</version>
			</dependency>

			<!-- gLite -->
			<dependency>
				<groupId>org.glite</groupId>
				<artifactId>voms</artifactId>
				<version>1.0</version>
			</dependency>

			<!-- Pure TLS -->
			<dependency>
				<groupId>com.claymoresystems</groupId>
				<artifactId>puretls</artifactId>
				<version>1.0</version>
			</dependency>
			
			<dependency>
				<groupId>colt</groupId>
				<artifactId>colt</artifactId>
				<version>1.2.0</version>
			</dependency>
			
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.5.4</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
	
	<dependencies>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<profiles>
		<!-- Generate XML binding classes -->
		<profile>
			<id>generate</id>
			<modules>
				<module>gpf4med-core</module>
			</modules>
			<build>
				<pluginManagement>
					<plugins>
						<!-- Do not generate XML binding classes from Eclipse to prevent version 
							system to update the version of the library -->
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.jvnet.jaxb2.maven2</groupId>
												<artifactId>maven-jaxb2-plugin</artifactId>
												<versionRange>[0.12.3,)</versionRange>
												<goals>
													<goal>generate</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore/>
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>

				<plugins>
					<!-- Generate sources -->
					<plugin>
						<groupId>org.jvnet.jaxb2.maven2</groupId>
						<artifactId>maven-jaxb2-plugin</artifactId>
						<version>0.12.3</version>
						<dependencies>
							<dependency>
								<groupId>org.jvnet.jaxb2_commons</groupId>
								<artifactId>jaxb2-commons-lang</artifactId>
								<version>2.4</version>
							</dependency>
							<dependency>
								<groupId>org.jvnet.jaxb2_commons</groupId>
								<artifactId>jaxb2-fluent-api</artifactId>
								<version>3.0</version>
							</dependency>							
						</dependencies>
						<executions>
							<execution>
								<id>report-xsd</id>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<schemaDirectory>${project.basedir}/gpf4med-core/src/main/xsd</schemaDirectory>
									<schemaIncludes>
										<schemaInclude>report.xsd</schemaInclude>
									</schemaIncludes>
									<bindingDirectory>${project.basedir}/gpf4med-core/src/main/xjb</bindingDirectory>
									<bindingIncludes>
										<include>report.xjb</include>
									</bindingIncludes>
									<generateDirectory>${project.basedir}/gpf4med-core/src/main/java</generateDirectory>
									<generatePackage>org.grycap.gpf4med.model.document</generatePackage>
									<extension>true</extension>
									<episode>false</episode>									
									<markGenerated>true</markGenerated>
									<removeOldOutput>false</removeOldOutput> <!-- Setting this to true can delete your source files -->
									<cleanPackageDirectories>true</cleanPackageDirectories>
									<verbose>false</verbose>
									<args>
										<arg>-Xannotate</arg>
										<arg>-Xfluent-api</arg>
										<arg>-Xcommons-lang</arg>
									</args>
									<plugins>
										<plugin>
											<groupId>org.jvnet.jaxb2_commons</groupId>
											<artifactId>jaxb2-basics-annotate</artifactId>
											<version>1.0.1</version>
										</plugin>
									</plugins>
								</configuration>								
							</execution>
							<execution>
								<id>template-xsd</id>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<schemaDirectory>${project.basedir}/gpf4med-core/src/main/xsd</schemaDirectory>
									<schemaIncludes>
										<schemaInclude>template.xsd</schemaInclude>
									</schemaIncludes>
									<bindingDirectory>${project.basedir}/gpf4med-core/src/main/xjb</bindingDirectory>
									<bindingIncludes>
										<include>template.xjb</include>
									</bindingIncludes>
									<generateDirectory>${project.basedir}/gpf4med-core/src/main/java</generateDirectory>
									<generatePackage>org.grycap.gpf4med.model.template</generatePackage>
									<extension>true</extension>
									<episode>false</episode>									
									<markGenerated>true</markGenerated>
									<removeOldOutput>false</removeOldOutput> <!-- Setting this to true can delete your source files -->
									<cleanPackageDirectories>true</cleanPackageDirectories>
									<verbose>false</verbose>
									<args>
										<arg>-Xannotate</arg>
										<arg>-Xfluent-api</arg>
										<arg>-Xcommons-lang</arg>
									</args>
									<plugins>
										<plugin>
											<groupId>org.jvnet.jaxb2_commons</groupId>
											<artifactId>jaxb2-basics-annotate</artifactId>
											<version>1.0.1</version>
										</plugin>
									</plugins>
								</configuration>								
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Build -->
		<profile>
			<id>build</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>gpf4med-external-deps</module>
				<module>gpf4med-core</module>
				<module>gpf4med-data</module>
				<module>gpf4med-api</module>
				<module>gpf4med-service</module>
				<module>gpf4med-distro</module>
				<module>gpf4med-graph-base</module>
				<module>gpf4med-enactor</module>
				<module>gpf4med-client</module>
			</modules>
			<build>
				<finalName>${project.artifactId}-${project.version}</finalName>
				<pluginManagement>
					<plugins>
						<!-- Handle Maven plugin lifecycle in Eclipse -->
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>${m2e.lifecycle-mapping.version}</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>exec-maven-plugin</artifactId>
												<versionRange>[${exec-maven-plugin.version},)</versionRange>
												<goals>
													<goal>exec</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore/>
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
						<!-- Force derived modules to use a specific version of Java -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-enforcer-plugin</artifactId>
							<version>${maven-enforcer-plugin.version}</version>
							<executions>
								<execution>
									<id>enforce-versions</id>
									<goals>
										<goal>enforce</goal>
									</goals>
									<configuration>
										<rules>
											<requireJavaVersion>
												<version>${java.version}</version>
											</requireJavaVersion>
										</rules>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<!-- Compilation configuration -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${maven-compiler-plugin.version}</version>
							<configuration>
								<source>${maven.compiler.source}</source>
								<target>${maven.compiler.target}</target>
							</configuration>
						</plugin>
						<!-- Unit tests configuration -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${maven-surefire-plugin.version}</version>
							<configuration>
								<argLine>-Xmx1024M -Xss1024k -XX:+UseConcMarkSweepGC</argLine>
								<includes>
									<include>**/AllUnitTests.java</include> <!-- unit tests are organized in a JUnit test suite -->
								</includes>
							</configuration>
						</plugin>
						<!-- Integration tests configuration -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${maven-failsafe-plugin.version}</version>
							<configuration>
								<argLine>-Xmx1024M -Xss1024k -XX:+UseConcMarkSweepGC</argLine>
								<includes>
									<include>**/AllIntegrationTests.java</include> <!-- integration tests are organized in a JUnit test suite -->
								</includes>
							</configuration>
							<executions>
								<execution>
									<id>integration-test</id>
									<goals>
										<goal>integration-test</goal>
										<goal>verify</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<!-- Package configuration: place a build time-stamp in jar or war manifest -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<version>${maven-jar-plugin.version}</version>
							<configuration>
								<archive>
									<manifest>
										<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									</manifest>
									<manifestEntries>
										<Implementation-Build>${buildNumber}</Implementation-Build>
									</manifestEntries>
								</archive>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<version>${maven-war-plugin.version}</version>
							<configuration>
								<archive>
									<manifest>
										<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									</manifest>
									<manifestEntries>
										<Implementation-Build>${buildNumber}</Implementation-Build>
									</manifestEntries>
								</archive>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
		
				<plugins>
					<!-- Create time-stamp to be used with the manifest -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>buildnumber-maven-plugin</artifactId>
						<version>${buildnumber-maven-plugin.version}</version>
						<configuration>
							<format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
							<items>
								<item>timestamp</item>
							</items>
							<revisionOnScmFailure>unknown</revisionOnScmFailure>
						</configuration>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>create</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<!-- 
	<modules>
		<module>gpf4med-external-deps</module>
		<module>gpf4med-core</module>
		<module>gpf4med-data</module>
		<module>gpf4med-api</module>
		<module>gpf4med-service</module>
		<module>gpf4med-distro</module>
		<module>gpf4med-graph-base</module>
		<module>gpf4med-enactor</module>
		<module>gpf4med-client</module>
	</modules>
	-->
</project>